// Componente para adicionar uma forma ao fractal
// Exibe opções de forma (círculo, quadrado, triângulo) e inputs para coordenadas e scale
// Layout integrado: mostra os inputs ao lado da lista de formas

import React, { useState } from 'react';

const SHAPES = [
  { type: 'circle', label: 'Círculo', icon: '⚪' },
  { type: 'square', label: 'Quadrado', icon: '⬛' },
  { type: 'triangle', label: 'Triângulo', icon: '▲' },
];

export default function AddShapePanel({ onAdd, onCancel }) {
  // Limites centrados
  const MIN = -250;
  const MAX = 250;
  const [selected, setSelected] = useState(null);
  const [x, setX] = useState(0);
  const [y, setY] = useState(0);
  const [scale, setScale] = useState(1);
  const clamp = (val) => Math.max(MIN, Math.min(MAX, Number(val)));

  const handleShapeSelect = (type) => {
    setSelected(type);
    setX(0);
    setY(0);
    setScale(1);
  };

  const handleSubmit = () => {
    if (!selected || isNaN(Number(x)) || isNaN(Number(y)) || isNaN(Number(scale))) return;
    const nx = clamp(x);
    const ny = clamp(y);
    onAdd({ type: selected, x: nx, y: ny, scale: Number(scale) });
    // Mantemos a seleção atual após adicionar
  };
  
  return (
    <div className="control-group">
      <label>Adicionar Forma</label>
      
      {/* Layout integrado com formas à esquerda e configurações à direita */}
      <div className="shape-editor-layout">
        {/* Lista de formas sempre visível */}
        <div className="shape-selector-panel">
          <div className="shape-buttons">
            {SHAPES.map(shape => (
              <button
                key={shape.type}
                onClick={() => handleShapeSelect(shape.type)}
                className={`shape-btn ${selected === shape.type ? 'selected' : ''}`}
              >
                <span style={{ marginRight: '5px' }}>{shape.icon}</span> {shape.label}
              </button>
            ))}
          </div>
        </div>
        
        {/* Painel de propriedades à direita, visível apenas quando uma forma está selecionada */}
        {selected && (
          <div className="shape-properties-panel">
            <div style={{ marginBottom: '6px', color: '#4CC674', fontSize: '12px', fontFamily: 'Rajdhani, monospace' }}>
              {SHAPES.find(s => s.type === selected).icon} {SHAPES.find(s => s.type === selected).label}
            </div>
            <div className="coordinate-inputs">
              <div>
                <label>X:</label>
                <input
                  type="number"
                  value={x}
                  min={MIN}
                  max={MAX}
                  onChange={e => setX(e.target.value)}
                />
              </div>
              <div>
                <label>Y:</label>
                <input
                  type="number"
                  value={y}
                  min={MIN}
                  max={MAX}
                  onChange={e => setY(e.target.value)}
                />
              </div>
            </div>
            <div className="coordinate-inputs">
              <div>
                <label>Escala:</label>
                <input
                  type="number"
                  value={scale}
                  min={0.1}
                  step={0.1}
                  onChange={e => setScale(e.target.value)}
                />
              </div>
            </div>
          </div>
        )}
      </div>
      
      {/* Único botão de adicionar no rodapé */}
      {selected && (
        <div className="shape-footer">
          <button onClick={handleSubmit} className="editor-btn">Adicionar Forma</button>
        </div>
      )}
    </div>
  );
}
